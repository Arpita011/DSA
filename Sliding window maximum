//using deque

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& arr, int k) {
        // if (k == 1) return arr;
        vector<int> ans;
        int i = 0, n = arr.size();
        deque<int> dq;
        for (i = 0; i < k; i++) {
            while(!(dq.empty()) && arr[i] >= arr[dq.back()])
                dq.pop_back();
            dq.push_back(i);
        }
        for (; i < n; i++) {
            ans.push_back(arr[dq.front()]);
            while (!(dq.empty()) && dq.front() <= i - k) {
                 dq.pop_front();
            }
            while(!(dq.empty()) && arr[i] >= arr[dq.back()])
                dq.pop_back();
            dq.push_back(i);
        }
        
        ans.push_back(arr[dq.front()]); 

        return ans;
    }
};
